import matplotlib.pyplot as plt
import numpy as np
from matplotlib.colors import ListedColormap
import json

letters = {
    "A": [
    [-1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, -1, 1, 1, 1, -1, -1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, -1],
    [-1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1],
    [-1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1],
    [-1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1],
    [-1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
    [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
    [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
    [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
    [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
    [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
    [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1]
    ],
    "B": [
    [-1, -1,  1,  1,  1,  1,  1,  1, -1, -1, -1, -1, -1, -1, -1],
    [-1, -1,  1, -1, -1, -1, -1,  1,  1, -1, -1, -1, -1, -1, -1],
    [-1, -1,  1, -1, -1, -1, -1,  1,  1, -1, -1, -1, -1, -1, -1],
    [-1, -1,  1, -1, -1, -1, -1,  1,  1, -1, -1, -1, -1, -1, -1],
    [-1, -1,  1, -1, -1, -1, -1,  1,  1, -1, -1, -1, -1, -1, -1],
    [-1, -1,  1,  1,  1,  1,  1,  1, -1, -1, -1, -1, -1, -1, -1],
    [-1, -1,  1, -1, -1, -1, -1,  1,  1, -1, -1, -1, -1, -1, -1],
    [-1, -1,  1, -1, -1, -1, -1,  1,  1, -1, -1, -1, -1, -1, -1],
    [-1, -1,  1, -1, -1, -1, -1,  1,  1, -1, -1, -1, -1, -1, -1],
    [-1, -1,  1, -1, -1, -1, -1,  1,  1, -1, -1, -1, -1, -1, -1],
    [-1, -1,  1, -1, -1, -1, -1,  1,  1, -1, -1, -1, -1, -1, -1],
    [-1, -1,  1, -1, -1, -1, -1,  1,  1, -1, -1, -1, -1, -1, -1],
    [-1, -1,  1, -1, -1, -1, -1,  1,  1, -1, -1, -1, -1, -1, -1],
    [-1, -1,  1, -1, -1, -1, -1,  1,  1, -1, -1, -1, -1, -1, -1],
    [-1, -1,  1,  1,  1,  1,  1,  1, -1, -1, -1, -1, -1, -1, -1],
    ],
    "C": [
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
    ],
    "D": [
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1]
    ],
    "E": [
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
    ],
    "F": [
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
    ],
    "G": [
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
    ],
    "H": [
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1]
    ],
    "I": [
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [-1, -1, -1, -1, -1, -1, 1, 1, 1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, 1, 1, 1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, 1, 1, 1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, 1, 1, 1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, 1, 1, 1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, 1, 1, 1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, 1, 1, 1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, 1, 1, 1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, 1, 1, 1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, 1, 1, 1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, 1, 1, 1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, 1, 1, 1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, 1, 1, 1, -1, -1, -1, -1, -1, -1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
    ],
    "J": [
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1],
        [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1],
        [1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, -1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1],
        [-1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1]
    ],
    "K": [
        [-1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1],
        [-1, -1, -1, 1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1],
        [-1, -1, -1, 1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1],
        [-1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, 1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, 1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, 1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, 1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, 1, -1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, 1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1],
        [-1, -1, -1, 1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1],
    ],
    "L": [
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],  # vertical bar
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],  # horizontal base

    ],
    "M": [
     [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1],
        [ 1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1,  1],
        [ 1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1,  1],
        [ 1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1,  1],
        [ 1, -1, -1, -1,  1, -1, -1, -1, -1, -1,  1, -1, -1, -1,  1],
        [ 1, -1, -1, -1, -1,  1, -1, -1, -1,  1, -1, -1, -1, -1,  1],
        [ 1, -1, -1, -1, -1, -1,  1, -1,  1, -1, -1, -1, -1, -1,  1],
        [ 1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1,  1],
        [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1],
        [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1],
        [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1],
        [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1],
        [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1],
        [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1],
        [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1],
    ],
    "N": [
    [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1],
    [ 1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1],
    [ 1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1],
    [ 1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1],
    [ 1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1],
    [ 1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1,  1],
    [ 1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1,  1],
    [ 1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1,  1],
    [ 1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1,  1],
    [ 1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1,  1],
    [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1,  1],
    [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1,  1],
    [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1,  1],
    [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1,  1],
    [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1],
    ],
    "O": [
        [-1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1],
        [-1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1],
        [-1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1],
        [-1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [-1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1],
        [-1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1],
        [-1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1],
        [-1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1],
    ],
    "P": [
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    ],
    "Q": [
        [-1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1],
        [-1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1],
        [-1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1],
        [-1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [-1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1],
        [-1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1],
        [-1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, -1],
        [-1, -1, -1, -1, 1, 1, -1, -1, -1, 1, 1, -1, -1, 1, -1],
        [-1, -1, -1, -1, -1, -1, 1, 1, 1, -1, -1, -1, -1, -1, 1],
    ],
    "R": [
    [ 1,  1,  1,  1,  1,  1,  1,  1,  1, -1, -1, -1, -1, -1, -1],
    [ 1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1],
    [ 1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1],
    [ 1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1],
    [ 1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1],
    [ 1,  1,  1,  1,  1,  1,  1,  1, -1, -1, -1, -1, -1, -1, -1],
    [ 1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1],
    [ 1, -1, -1, -1, -1, -1,  -1, -1, 1, -1, -1, -1, -1, -1, -1],
    [ 1, -1, -1, -1, -1,  -1, -1, -1, -1, 1, -1, -1, -1, -1, -1],
    [ 1, -1, -1, -1,  -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1],
    [ 1, -1, -1,  -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1],
    [ 1, -1,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1],
    [ 1,  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1],
    [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1],
    [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1],
    ],
    "S": [
[-1, -1, -1,  1,  1,  1,  1,  1,  1, -1, -1, -1, -1, -1, -1],
    [-1, -1,  1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1],
    [-1,  1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1],
    [-1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    [-1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    [-1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    [-1, -1, -1,  1,  1,  1,  1,  1,  1, -1, -1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1],
    [-1, 1, 1,  1,  1,  1,  1,  -1,  -1, -1, -1, -1, -1, -1, -1],
    ],
    "T": [
[ 1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1],
    [-1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1],
    ],
    "U": [
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1],
        [-1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1],
    ],
    "V": [
    [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1],
        [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1],
        [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1],
        [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1],
        [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1],
        [ 1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1],
        [ 1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1],
        [ 1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1],
        [ 1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1],
        [ 1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [ 1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [ 1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [ 1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [ 1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    ],
    "W": [
[ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1],
    [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1],
    [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1],
    [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1],
    [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1],
    [ 1, -1, -1, -1, -1, -1, -1, 1, 1, -1, -1, -1, -1, -1,  1],
    [ 1, -1, -1, -1, -1, -1,  1, -1, -1,  1, -1, -1, -1, -1,  1],
    [ 1, -1, -1, -1, -1,  1, -1, -1, -1, -1,  1, -1, -1, -1,  1],
    [ 1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1,  1, -1, -1,  1],
    [ 1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1,  1],
    [ 1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1,  1],
    [ 1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1],
    [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1],
    [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1],
    [ 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1],
    ],
    "X": [
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [-1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1],
        [-1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1],
        [-1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1],
        [-1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1],
        [-1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1],
        [-1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1],
        [-1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1],
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
    ],
    "Y": [
        [1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1],
        [-1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1],
        [-1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1],
        [-1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1],
        [-1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1],
        [-1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1],
    ],
    "Z": [
    [ 1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1],
    [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1],
    [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1],
    [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1],
    [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    [-1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    [-1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    [-1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    [-1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
    [ 1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1],
    ]
}

def setup_plot_15x15(state):
    cmap = ListedColormap(["white", "black"])

    fig, ax = plt.subplots(figsize=(6, 6))
    im = ax.imshow(state, cmap=cmap, vmin=-1, vmax=1)

    ax.set_xticks(np.arange(15) - 0.5, minor=True)
    ax.set_yticks(np.arange(15) - 0.5, minor=True)
    ax.grid(which="minor", color="gray", linestyle="-", linewidth=0.5)

    ax.set_xticks([])
    ax.set_yticks([])
    ax.tick_params(which="both", bottom=False, left=False)
    ax.set_xlim(-0.5, 14.5)
    ax.set_ylim(14.5, -0.5)
    ax.set_aspect('equal')

    return fig, ax, im

def visualize_letter_15x15(letter_matrix, filename=None):
    fig, ax, im = setup_plot_15x15(letter_matrix)

    if filename is None:
        plt.show()
    else:
        plt.savefig(filename, bbox_inches='tight')
        plt.close(fig)

if __name__ == "__main__":
    visualize_letter_15x15(letters["A"])